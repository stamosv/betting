<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.6.3</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>
  <groupId>com.example</groupId>
  <artifactId>betting-project</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>betting-project</name>
  <description>Demo project for Spring Boot</description>

  <properties>
    <java.version>11</java.version>
    <mapstruct.version>1.4.2.Final</mapstruct.version>
    <jib-maven-plugin.version>3.2.0</jib-maven-plugin.version>

    <spring.base.image.path>gcr.io/distroless/java:11</spring.base.image.path>
    <flatten-maven-plugin.version>1.2.7</flatten-maven-plugin.version>

    <docker.image.product.prefix>betting</docker.image.product.prefix>
    <docker.image.component.prefix>project</docker.image.component.prefix>
    <docker.registry.pull.url>vstamos.private:30225</docker.registry.pull.url>
    <docker.registry.push.url>vstamos.private:30225</docker.registry.push.url>
    <docker.registry.username>to-override</docker.registry.username>
    <docker.registry.password>to-override</docker.registry.password>
    <version.liquibase>4.2.0</version.liquibase>
    <version.postgresql>42.2.13</version.postgresql>
    <spring.boot.version>2.6.3</spring.boot.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
      <version>${mapstruct.version}</version>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${version.postgresql}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-rest-core</artifactId>
      <version>3.6.1</version>
    </dependency>

  </dependencies>


  <build>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <configuration>
            <classifier>executable</classifier>
            <layers>
              <enabled>true</enabled>
            </layers>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.google.cloud.tools</groupId>
          <artifactId>jib-maven-plugin</artifactId>
          <version>${jib-maven-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <annotationProcessorPaths>
              <path>
                <!-- Lombok processor must come BEFORE the mapstruct one -->
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
              </path>
              <path>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-jpamodelgen</artifactId>
                <version>${hibernate.version}</version>
              </path>
              <path>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
              </path>
              <path>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-configuration-processor</artifactId>
                <version>${spring.boot.version}</version>
              </path>
            </annotationProcessorPaths>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>com.google.cloud.tools</groupId>
        <artifactId>jib-maven-plugin</artifactId>
        <configuration>
          <skip>false</skip>
          <allowInsecureRegistries>true</allowInsecureRegistries>
          <from>
            <image>${spring.base.image.path}</image>
          </from>
          <to>
            <image>
              ${docker.registry.push.url}/${docker.image.product.prefix}-${docker.image.component.prefix}
            </image>
            <auth>
              <username>${docker.registry.username}</username>
              <password>${docker.registry.password}</password>
            </auth>
          </to>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <version>${flatten-maven-plugin.version}</version>
        <configuration>
          <updatePomFile>true</updatePomFile>
        </configuration>
        <executions>
          <execution>
            <id>flatten</id>
            <phase>process-resources</phase>
            <goals>
              <goal>flatten</goal>
            </goals>
          </execution>
          <execution>
            <id>flatten.clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.liquibase</groupId>
        <artifactId>liquibase-maven-plugin</artifactId>
        <version>${version.liquibase}</version>
        <configuration>
          <propertyFile>src/main/resources/liquibase/${service.name}/liquibase.properties
          </propertyFile>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${version.postgresql}</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>

</project>
